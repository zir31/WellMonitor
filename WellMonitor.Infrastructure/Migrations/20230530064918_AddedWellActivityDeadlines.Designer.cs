// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WellMonitor.Infrastructure;

#nullable disable

namespace WellMonitor.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230530064918_AddedWellActivityDeadlines")]
    partial class AddedWellActivityDeadlines
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("WellMonitor.Core.Entities.CompanyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("t_company");
                });

            modelBuilder.Entity("WellMonitor.Core.Entities.TelemetryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date_time")
                        .HasColumnType("TEXT");

                    b.Property<float>("Depth")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("t_telemetry");
                });

            modelBuilder.Entity("WellMonitor.Core.Entities.WellActivityDeadlineEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("TEXT");

                    b.Property<int>("WellId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WellId")
                        .IsUnique();

                    b.ToTable("t_well_deadline");
                });

            modelBuilder.Entity("WellMonitor.Core.Entities.WellEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id_company")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id_telemetry")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("t_well");
                });

            modelBuilder.Entity("WellMonitor.Core.Entities.WellActivityDeadlineEntity", b =>
                {
                    b.HasOne("WellMonitor.Core.Entities.WellEntity", "Well")
                        .WithOne()
                        .HasForeignKey("WellMonitor.Core.Entities.WellActivityDeadlineEntity", "WellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Well");
                });
#pragma warning restore 612, 618
        }
    }
}
